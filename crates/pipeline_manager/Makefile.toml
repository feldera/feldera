[env]
RUST_BUILD_PROFILE = "--release"

[tasks.build]
command = "cargo"
args = ["build", "--features=pg-embed", "@@remove-empty(RUST_BUILD_PROFILE)"]

[tasks.openapi_json]
description = "Dump OpenAPI specification of the REST API to 'openapi.json'"
dependencies = ["build"]
script = '''
cd ../../
cargo run --package pipeline-manager --features=pg-embed --bin pipeline-manager $RUST_BUILD_PROFILE -- --dump-openapi
'''

[tasks.openapi_python]
description = "Generate Python bindings for the REST API"
dependencies = ["openapi_json"]
script = '''
pip3 install openapi-python-client
cd ../../python
rm -rf feldera-api-client
openapi-python-client generate --path ../openapi.json --fail-on-warning
pip3 install -e ./feldera-api-client
pip3 install -e .
pip3 install websockets
'''

[tasks.start_manager]
script = '''
old_manager_pid=$(pgrep "pipeline-mana" || echo "")
echo "Old manager: " $old_manager_pid
if [ -n "$old_manager_pid" ]; then
    echo "Previous manager instance is running"
    exit 1
fi
../../scripts/start_manager.sh &
manager_pid=$!
while true; do
    if curl --output /dev/null --silent --head --fail http://localhost:8080; then
        echo "Pipeline manager is up and running"
        break
    else
        if ! ps -p $manager_pid > /dev/null; then
            echo "Manager process has terminated unexpectedly"
            exit 1
        fi
        sleep 1
    fi
done
'''

[tasks.python_api_test]
description = "Test Python API"
dependencies = ["openapi_python", "start_manager"]
script = '''
python3 ../../python/test.py http://localhost:8080 http
'''

[tasks.fraud_notebook_test]
description = "Fraud detection Python notebook test"
dependencies = ["openapi_python", "start_manager"]
script = '''
cd ../../demo/demo_notebooks
pip3 install -r requirements.txt
IN_CI=1 jupyter execute fraud_detection.ipynb --JupyterApp.log_level='DEBUG'
'''

[tasks.python_test]
dependencies = ["fraud_notebook_test", "python_api_test"]

[tasks.test]
dependencies = ["python_test"]
