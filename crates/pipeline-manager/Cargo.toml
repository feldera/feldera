[package]
name = "pipeline-manager"
description = "Data pipeline manager for the Feldera continuous analytics platform."
keywords = ["DBSP", "streaming", "analytics", "database", "webui"]
categories = ["database", "gui"]
publish = false

edition = { workspace = true }
version = { workspace = true }
homepage = { workspace = true }
repository = { workspace = true }
license = { workspace = true }
authors = { workspace = true }
rust-version = { workspace = true }
readme = { workspace = true }

[package.metadata.cargo-udeps.ignore]
development = ["pg-client-config"]

[dependencies]
# Feldera
feldera-types = { workspace = true }

# Cryptography provider
# Make sure this is the same rustls version used by other crates in the dependency tree.
# See the `ensure_default_crypto_provider` function at the root of this crate.
rustls = { workspace = true }

# Logging
log = { workspace = true }
env_logger = { workspace = true, features = ["color"] }
colored = { workspace = true }

# Error handling and asserts
anyhow = { workspace = true, features = ["backtrace"] }
thiserror = { workspace = true }
static_assertions = { workspace = true }

# Asynchronous runtime
tokio = { workspace = true, features = ["rt-multi-thread", "fs", "macros", "process", "io-util", "io-std", "signal"] }
tokio-stream = { workspace = true }
async-stream = { workspace = true }
async-trait = { workspace = true }
futures-util = { workspace = true }

# Encoding, decoding and formatting
rand = { workspace = true }
uuid = { workspace = true, features = ["v7", "std", "serde"] }
chrono = { workspace = true, features = ["clock", "serde"] }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true, features = ["preserve_order"] }
serde_yaml = { workspace = true }
hex = { workspace = true }
indoc = { workspace = true }
openssl = { workspace = true }
url = { workspace = true }
urlencoding = { workspace = true }
regex = { workspace = true }
tar = { workspace = true }
flate2 = { workspace = true }
base64 = { workspace = true }

# Command-line interaction
clap = { workspace = true }
termbg = { workspace = true }

# Database
tokio-postgres = { workspace = true, features = ["with-serde_json-1", "with-uuid-1", "with-chrono-0_4"] }
deadpool-postgres = { workspace = true }
# Waiting for https://github.com/faokunega/pg-embed/pull/26
pg-embed = { workspace = true, features = ["rt_tokio"], optional = true }
refinery = { workspace = true, features = ["tokio-postgres"] }
postgres-openssl = { workspace = true }

# HTTP server and client
actix-web = { workspace = true }
actix-http = { workspace = true }
actix-web-static-files = { workspace = true }
actix-files = { workspace = true }
actix-cors = { workspace = true }
actix-web-httpauth = { workspace = true }
jsonwebtoken = { workspace = true }
static-files = { workspace = true }
utoipa = { workspace = true, features = ["actix_extras", "chrono", "uuid"] }
utoipa-swagger-ui = { workspace = true, features = ["actix-web"] }
awc = { workspace = true, features = ["openssl"] }  # For: auth workflows
reqwest = { workspace = true, features = ["json"]}
cached = { workspace = true }
crossbeam = { workspace = true }
metrics = { workspace = true }
metrics-exporter-prometheus = { workspace = true }

# System interaction
dirs = { workspace = true }  # For: discovering home directory
fdlimit = { workspace = true }  # For: raising file descriptor limit
nix = { workspace = true, features = ["signal"] }  # For: terminating process group

# Not used
# These dependencies are not used by this crate, but by the generated pipeline crates.
# They are provided such that they are included in the workspace `Cargo.lock`.
# Keep in-sync with `src/compiler/rust_compiler.rs`.
compare = { workspace = true }
[target.'cfg(not(target_env = "msvc"))'.dependencies]
tikv-jemallocator = { workspace = true, features = ["profiling", "unprefixed_malloc_on_supported_platforms"] }

[features]
default = ["pg-embed"]
feldera-enterprise = []

[build-dependencies]
change-detection = { workspace = true }
static-files = { workspace = true }

[dev-dependencies]
proptest = { workspace = true }
proptest-derive = { workspace = true }
pretty_assertions = { workspace = true }
pg-client-config = { workspace = true }
base64 = { workspace = true }
actix-http = { workspace = true }
serial_test = { workspace = true }
aws-sdk-cognitoidentityprovider = { workspace = true }
aws-config = { workspace = true }
wiremock = { workspace = true }
feldera-types = { workspace = true, features = ["testing"] }
itertools = { workspace = true }
tempfile = { workspace = true }
tokio = { workspace = true, features = ["sync"] }

[package.metadata.cargo-machete]
ignored = ["static-files", "compare", "tikv-jemallocator"]
