name: Post Release Tasks

on:
  release:
    types: [published]

env:
  RUSTC_WRAPPER: sccache
  SCCACHE_DIR: /sccache

jobs:
  publish-python:
    name: ""
    uses: ./.github/workflows/publish-python.yml
    secrets: inherit
  publish-crates:
    name: ""
    uses: ./.github/workflows/publish-crates.yml
    secrets: inherit
  adjust-versions:
    runs-on: [self-hosted, skylake40]
    container:
      image: ghcr.io/feldera/feldera-dev:39c1b55d0972ccd26375cf2f7cbc8554f4609da8
      options: --user=ubuntu
      volumes:
        - /sccache:/sccache
    needs: [publish-crates, publish-python]
    steps:
      - uses: actions/checkout@v4
        with:
          # This runs on main because we make the commit on main at the end of the workflow,
          # we use the token so it can circument push to main protection rules
          ref: main
          token: ${{ secrets.CI_RELEASE }}
      - name: Rustup set default toolchain
        run: rustup default stable
      - name: Determine current version based on pipeline-manager
        run: |
          echo "CURRENT_VERSION=$(cargo metadata --no-deps | jq -r '.packages[]|select(.name == "pipeline-manager")|.version')" >> $GITHUB_ENV
      - name: Bump cargo versions
        run: |
          cargo set-version --bump ${{ vars.RELEASE_NEXT_VERSION }} -p feldera-types
          cargo set-version --bump ${{ vars.RELEASE_NEXT_VERSION }} -p feldera-storage
          cargo set-version --bump ${{ vars.RELEASE_NEXT_VERSION }} -p dbsp
          cargo set-version --bump ${{ vars.RELEASE_NEXT_VERSION }} -p fda
          cargo set-version --bump ${{ vars.RELEASE_NEXT_VERSION }} -p pipeline-manager
          cargo set-version --bump ${{ vars.RELEASE_NEXT_VERSION }} -p feldera-sqllib
          cargo run --release  --locked --bin pipeline-manager -- --dump-openapi
      - name: Determine next version based on pipeline-manager
        run: |
          echo "NEXT_VERSION=$(cargo metadata --no-deps | jq -r '.packages[]|select(.name == "pipeline-manager")|.version')" >> $GITHUB_ENV
      - name: Adjust python version
        working-directory: ./python
        run: |
          sed -i "s/version = \"${{ env.CURRENT_VERSION }}\"/version = \"${{ env.NEXT_VERSION }}\"/g" pyproject.toml
          uv sync
      - name: List changes
        run: |
          git diff
      - uses: EndBug/add-and-commit@v9
        with:
          message: "ci: Prepare for v${{ env.NEXT_VERSION }}"
          author_name: feldera-ci
          author_email: feldera-ci-noreply@feldera.io
          push: origin main
