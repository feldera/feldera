name: Create a new release

on:
  workflow_dispatch:
    inputs:
      sha:
        description: "SHA to release (a recent commit from main that hasn't been released yet)"

env:
  REGISTRY: ghcr.io

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      SHA_TO_RELEASE: ${{ github.event.inputs.sha || github.sha }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-tags: true
          ref: ${{ env.SHA_TO_RELEASE }}

      - name: Determine version to release based on pipeline-manager
        run: |
          echo "CURRENT_VERSION=$(cargo metadata --no-deps | jq -r '.packages[]|select(.name == "pipeline-manager")|.version')" >> $GITHUB_ENV

      - name: Check if version is already released (do we have git tag for this version?)
        run: |
          if git tag -l | grep -q "^v${{ env.CURRENT_VERSION }}$"; then
            echo "Version ${CURRENT_VERSION} is already released"
            echo "version_exists=true" >> $GITHUB_ENV
          else
            echo "Version ${CURRENT_VERSION} is not released yet"
            echo "version_exists=false" >> $GITHUB_ENV
          fi

      - name: Download artifact
        if: env.version_exists == 'false'
        id: download-artifact
        uses: dawidd6/action-download-artifact@v9
        with:
          workflow: ci.yml
          workflow_conclusion: success
          commit: ${{ env.SHA_TO_RELEASE }}
          name: feldera-sql-compiler-*|feldera-binaries-*
          name_is_regexp: true
          skip_unpack: true
          if_no_artifact_found: fail

      - name: Attach version to binaries
        if: env.version_exists == 'false'
        run: |
          mv feldera-binaries-aarch64-unknown-linux-gnu.zip feldera-binaries-v${{ env.CURRENT_VERSION }}-aarch64-unknown-linux-gnu.zip
          mv feldera-binaries-x86_64-unknown-linux-gnu.zip feldera-binaries-v${{ env.CURRENT_VERSION }}-x86_64-unknown-linux-gnu.zip
          mv feldera-sql-compiler.zip feldera-sql-compiler-v${{ env.CURRENT_VERSION }}.zip

      - name: Release on GitHub
        if: env.version_exists == 'false'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.CURRENT_VERSION }}
          generate_release_notes: true
          make_latest: true
          files: |
            feldera-binaries-v${{ env.CURRENT_VERSION }}-aarch64-unknown-linux-gnu.zip
            feldera-binaries-v${{ env.CURRENT_VERSION }}-x86_64-unknown-linux-gnu.zip
            feldera-sql-compiler-v${{ env.CURRENT_VERSION }}.zip
          # A custom token is necessary so the ci-post-release.yml workflow is triggered
          # see also https://github.com/softprops/action-gh-release/issues/59
          token: ${{ secrets.CI_RELEASE }}

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Tag docker image with version and latest
        run: |
          docker buildx imagetools create -t ${{ vars.FELDERA_IMAGE_NAME }}:${{ env.CURRENT_VERSION }} ${{ vars.FELDERA_IMAGE_NAME }}:sha-${{ env.SHA_TO_RELEASE }}
          docker buildx imagetools create -t ${{ vars.FELDERA_IMAGE_NAME }}:latest ${{ vars.FELDERA_IMAGE_NAME }}:sha-${{ env.SHA_TO_RELEASE }}
