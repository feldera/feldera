# Run all the things we can run once we have a working docker image
name: Integration Tests

on:
  workflow_call:

jobs:
  manager-tests:
    name: Integration Tests
    strategy:
      matrix:
        include:
          - runner: [self-hosted, skylake40]
            arch: x86_64
            target: x86_64-unknown-linux-gnu
          - runner: blacksmith-16vcpu-ubuntu-2204-arm
            arch: aarch64
            target: aarch64-unknown-linux-gnu
    runs-on: ${{ matrix.runner }}

    container:
      image: ghcr.io/feldera/feldera-dev:f4797ad926773a38483275405728a9eb3b9005b5

    services:
      pipeline-manager:
        image: ${{ vars.FELDERA_IMAGE_NAME }}:sha-${{ github.sha }}
        options: >-
          --health-cmd "curl --fail --request GET --url http://localhost:8080/healthz || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Test Binaries
        uses: actions/download-artifact@v4
        with:
          name: feldera-test-binaries-${{ matrix.target }}
          path: build

      # Remove if https://github.com/actions/upload-artifact/issues/38 ever gets fixed
      - name: Make binaries executable
        run: chmod +x ./build/*

      - name: Validate and run packaged demos
        run: |
          (cd demo/packaged && uv run validate-preamble.py sql/*.sql)
          uv run demo/all-packaged/run.py --api-url http://pipeline-manager:8080
        env:
          PYTHONPATH: ${{ github.workspace }}/python

      - name: Run manager tests
        run: ./build/integration_test-*
        env:
          TEST_DBSP_URL: http://pipeline-manager:8080
          RUST_BACKTRACE: 1

      - name: Run python tests
        run: uv run --locked pytest . --timeout=600
        working-directory: python/tests
        env:
          FELDERA_BASE_URL: http://pipeline-manager:8080
          IN_CI: 1 # We use this flag to skip some kafka tests in the python code base

      - name: Run python aggregate tests
        run: uv run --locked ./tests/aggregate_tests/main.py
        working-directory: python
        env:
          FELDERA_BASE_URL: http://pipeline-manager:8080
          PYTHONPATH: ${{ github.workspace }}/python
