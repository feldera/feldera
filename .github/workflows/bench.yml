name: Benchmark DBSP

on:
  push:
    branches:
      - main
  issue_comment:
    types: [created, edited, deleted]

env:
  CARGO_TERM_COLOR: always
  CARGO_NET_RETRY: 10
  RUST_BACKTRACE: short
  RUSTUP_MAX_RETRIES: 10
  CI_MACHINE_TYPE: "skylake-2x"
  PR_COMMIT_SHA: ${{ github.event.pull_request.head.sha }}
  FORCE_COLOR: 1

jobs:
  benchmark:
    permissions:
      contents: read
      issues: write
      pull-requests: write
    runs-on: [self-hosted, skylake40, benchmark-machine]
    if: github.event.issue.pull_request && contains(github.event.comment.body, '/benchmark') || github.event_name == 'push'
    steps:
      - uses: earthly/actions/setup-earthly@v1
        with:
          version: v0.7.17
      - uses: actions/checkout@v3
        # By default a merge commit is checked out. If you look at the SHA that
        # is checked out, it doesn't match your local commit SHA. Rather it's
        # the SHA of a merge commit (your branch + base branch). So for
        # pull_request actions it won't match the commit ID on the branch. This
        # is confusing for storing benchmark results because the commit ID we
        # find during `git rev-parse` exists nowhere in the history. Since we
        # don't do merge commits anyways, we make sure we check out the head
        # commit (which will exist in the history).
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          submodules: true

      - name: MUIX license
        run: echo "NEXT_PUBLIC_MUIX_PRO_KEY=${muix_license}" > web-console/.env && cat web-console/.env
        env:
          muix_license: ${{ secrets.muix_license }}

      - name: Earthly version
        run: earthly --version

      - name: Run Benchmarks
        run: earthly --verbose -P +benchmark

      - name: Publish results
        run: bash ./scripts/bench-publish.bash

      # Find comment with benchmark info if it exists
      - name: Find Comment
        uses: peter-evans/find-comment@v2
        # This action fails when not running on a PR.
        if: ${{ github.event.issue.number != '' }}
        id: fc
        with:
          issue-number: ${{ github.event.issue.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Benchmark results

      - name: Create or update comment
        uses: peter-evans/create-or-update-comment@v2
        if: ${{ github.event.issue.number != '' }}
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.issue.number }}
          body-file: nexmark_comment.txt
          edit-mode: replace