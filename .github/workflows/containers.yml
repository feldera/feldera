on:
  schedule:
    - cron: '0 0 * * *'
  release:
      types: [published]

env:
  REGISTRY: ghcr.io
  DBSP_IMAGE: ghcr.io/${{ github.repository_owner }}/dbsp-manager
  DEMO_IMAGE: ghcr.io/${{ github.repository_owner }}/demo-container

jobs:
  build-and-push-image:
    runs-on: [self-hosted, skylake40]
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: MUIX license
        run: echo "NEXT_PUBLIC_MUIX_PRO_KEY=${muix_license}" > web-console/.env && cat web-console/.env
        env:
          muix_license: ${{ secrets.muix_license }}

      - name: Docker meta (dbsp-manager)
        id: meta_dbsp
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.DBSP_IMAGE }}
          tags: |
            type=semver,pattern={{version}}

      - name: Docker meta (demo-container)
        id: meta_demo
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.DEMO_IMAGE }}
          tags: |
            type=semver,pattern={{version}}

      - name: Run integration tests
        run: |
          cd deploy && \
          SECOPS_DEMO_ARGS="--prepare-args 500000" RUST_LOG=debug,tokio_postgres=info docker compose -f docker-compose.yml -f docker-compose-dev.yml --profile demo up --build --force-recreate --exit-code-from demo --renew-anon-volumes

      # Disable until we bring the Kubernetes workflows up to speed
      #
      # - uses: engineerd/setup-kind@v0.5.0
      #   with:
      #     version: "v0.11.1"
      #     skipClusterCreation: "true"

      # - name: Set up kind
      #   run: cd deploy/kind && ./setup.sh && ./setup.sh

      # - name: Deploy DBSP
      #   run: cd deploy/kind && sleep 60 && kubectl apply -f dbsp-deploy.yml && kubectl wait --for=condition=ready pod -l app=dbsp -n dbsp --timeout=300s

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Push untagged images when the workflow is not triggered by a release
      - name: Push containers
        if: github.event_name != 'release'
        run: docker push ${{ env.DBSP_IMAGE }} && docker push ${{ env.DEMO_IMAGE }}

      # Tagged DBSP image
      - name: Push (dbsp-manager)
        uses: docker/build-push-action@v4
        if: github.event_name == 'release'
        with:
          context: .
          file: deploy/Dockerfile
          push: true
          tags: ${{ steps.meta_dbsp.outputs.tags }}
          labels: ${{ steps.meta_dbsp.outputs.labels }}

      # Tagged demo image
      - name: Push (demo-container)
        uses: docker/build-push-action@v4
        if: github.event_name == 'release'
        with:
          context: .
          file: deploy/Dockerfile
          target: client
          push: true
          tags: ${{ steps.meta_demo.outputs.tags }}
          labels: ${{ steps.meta_demo.outputs.labels }}

      - uses: actions/delete-package-versions@v4
        with:
          package-name: dbsp-manager
          package-type: 'container'
          min-versions-to-keep: 5
          delete-only-untagged-versions: 'true'

      - uses: actions/delete-package-versions@v4
        with:
          package-name:  demo-container
          package-type: 'container'
          min-versions-to-keep: 5
          delete-only-untagged-versions: 'true'