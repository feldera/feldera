name: Build kafka-connect image

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'kafka-connect image version'
        required: true
        type: string

env:
  REGISTRY: ghcr.io
  KAFKA_CONNECT_IMAGE: ghcr.io/${{ github.repository_owner }}/kafka-connect

jobs:
  build-and-push-image:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - runner: [self-hosted, skylake40]
            os: linux
            arch: amd64
          - runner: blacksmith-8vcpu-ubuntu-2204-arm
            os: linux
            arch: arm64
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Docker meta (kafka-connect)
        id: meta_kafka_connect
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.KAFKA_CONNECT_IMAGE }}
          tags: |
            type=raw,value=${{ inputs.version }}
            type=raw,value=latest

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push kafka-connect image
        id: build_kafka_connect
        uses: docker/build-push-action@v6
        with:
          context: deploy/
          platforms: ${{matrix.os}}/${{matrix.arch}}
          file: deploy/Dockerfile.kafka-connect
          push: true
          tags: ${{ steps.meta_kafka_connect.outputs.tags }}

      - name: Export multiarch image digest
        id: export_image_digest
        run: |
          echo "digest-kafka-connect-${{matrix.os}}-${{matrix.arch}}=${{ steps.build_kafka_connect.outputs.digest }}" >> $GITHUB_OUTPUT

      # - uses: actions/delete-package-versions@v4
      #   with:
      #     package-name: kafka-connect
      #     package-type: 'container'
      #     min-versions-to-keep: 5
      #     delete-only-untagged-versions: 'true'

    outputs:
      digest-kafka-connect-linux-amd64: ${{ steps.export_image_digest.outputs.digest-kafka-connect-linux-amd64 }}
      digest-kafka-connect-linux-arm64: ${{ steps.export_image_digest.outputs.digest-kafka-connect-linux-arm64 }}

  push-docker-manifest:
    needs: build-and-push-image
    runs-on: blacksmith-2vcpu-ubuntu-2204-arm
    permissions:
      contents: read
      packages: write
    steps:
      - name: Docker meta
        id: meta_kafka_connect
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.KAFKA_CONNECT_IMAGE }}
          tags: |
            type=raw,value=${{ inputs.version }}
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push latest manifest
        run: |
            docker manifest create ${{ env.KAFKA_CONNECT_IMAGE }} \
              ${{ env.KAFKA_CONNECT_IMAGE }}@${{needs.build-and-push-image.outputs.digest-kafka-connect-linux-amd64}} \
              ${{ env.KAFKA_CONNECT_IMAGE }}@${{needs.build-and-push-image.outputs.digest-kafka-connect-linux-arm64}}
            docker manifest push ${{ env.KAFKA_CONNECT_IMAGE }}:latest
      - name: Push versioned manifest
        run: |
            docker manifest create ${{ env.KAFKA_CONNECT_IMAGE }} \
              ${{ env.KAFKA_CONNECT_IMAGE }}@${{needs.build-and-push-image.outputs.digest-kafka-connect-linux-amd64}} \
              ${{ env.KAFKA_CONNECT_IMAGE }}@${{needs.build-and-push-image.outputs.digest-kafka-connect-linux-arm64}}
            docker manifest push ${{ env.KAFKA_CONNECT_IMAGE }}:${{ inputs.version }}