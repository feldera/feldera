name: Unit Tests

on:
  workflow_call:
  workflow_dispatch:

env:
  RUST_BACKTRACE: 1

jobs:
  rust-unit-tests:
    name: Rust Unit Tests
    strategy:
      matrix:
        include:
          - runner: [self-hosted, skylake40]
            arch: x86_64
            target: x86_64-unknown-linux-gnu
          - runner: [self-hosted, alteram128]
            arch: aarch64
            target: aarch64-unknown-linux-gnu
    runs-on: ${{ matrix.runner }}

    container:
      image: ghcr.io/feldera/feldera-dev:sha-cfae3f2af7e7676dde51af39ed76332f67d91b6a
      options: --user=ubuntu

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Test Binaries
        uses: actions/download-artifact@v4
        with:
          name: feldera-test-binaries-${{ matrix.target }}
          path: build

      # Remove if https://github.com/actions/upload-artifact/issues/38 ever gets fixed
      - name: Make binaries executable
        if: ${{ vars.CI_DRY_RUN != 'true' }}
        run: chmod +x ./build/*

      - name: feldera-types
        if: ${{ vars.CI_DRY_RUN != 'true' }}
        run: ./build/feldera_types-*

      - name: dbsp
        if: ${{ vars.CI_DRY_RUN != 'true' }}
        run: ./build/dbsp-*

      - name: feldera-sqllib
        if: ${{ vars.CI_DRY_RUN != 'true' }}
        run: ./build/feldera_sqllib-*

      - name: feldera-ir
        if: ${{ vars.CI_DRY_RUN != 'true' }}
        run: ./build/feldera_ir-*

      - name: readers
        if: ${{ vars.CI_DRY_RUN != 'true' }}
        run: ../../../build/readers-*
        # `readers` needs some find files relative to its source directory
        working-directory: sql-to-dbsp-compiler/lib/readers

      - name: dbsp_nexmark
        if: ${{ vars.CI_DRY_RUN != 'true' }}
        run: ../../build/dbsp_nexmark-*
        # `dbsp_nexmark` needs some find files relative to its source directory
        working-directory: crates/nexmark

      - name: nexmark
        if: ${{ vars.CI_DRY_RUN != 'true' }}
        run: |
          ../../build/nexmark-* ${{ env.NEXMARK_ARGS }}
          ../../build/nexmark-* ${{ env.NEXMARK_ARGS }} --storage 10000
        working-directory: crates/nexmark
        env:
          NEXMARK_ARGS: "--max-events=1000000 --cpu-cores 8 --num-event-generators 8"
