{
  "prefix": "accrual_",
  "steps": [
    {
      "name": "Setup the demo",
      "entities": [
        {
          "type": "program",
          "name": "program",
          "body": {
            "code": "-- slow changing TABLE\nCREATE TABLE customer_t (\n    id BIGINT NOT NULL PRIMARY KEY,\n    name STRING NOT NULL\n);\n\n-- slow changing TABLE\nCREATE TABLE workspace_t (\n    id BIGINT NOT NULL PRIMARY KEY,\n    name STRING NOT NULL,\n    customer_id BIGINT NOT NULL FOREIGN KEY REFERENCES customer_t (id)\n);\n\n-- slow changing TABLE\nCREATE TABLE work_t (\n    id BIGINT NOT NULL PRIMARY KEY,\n    name STRING NOT NULL,\n    workspace_id BIGINT NOT NULL FOREIGN KEY REFERENCES workspace_t (id)\n);\n\n-- customer has only one credit tuple and it's non-changing\n-- consumed tuples are fast changing and insert only\nCREATE TABLE credit_t (\n    id BIGINT NOT NULL PRIMARY KEY,\n    total DOUBLE NOT NULL,\n    customer_id BIGINT NOT NULL FOREIGN KEY REFERENCES customer_t (id)\n);\n\n-- slow changing TABLE\nCREATE TABLE user_t (\n    id BIGINT NOT NULL PRIMARY KEY,\n    name STRING NOT NULL\n);\n\n-- fast changing TABLE\nCREATE TABLE task_t (\n    id BIGINT NOT NULL PRIMARY KEY,\n    event_time TIMESTAMP NOT NULL,\n    user_id BIGINT NOT NULL FOREIGN KEY REFERENCES user_t (id),\n    work_id BIGINT NOT NULL FOREIGN KEY REFERENCES work_t (id),\n    total DOUBLE NOT NULL\n);\n\n-- consumed total by work item.\nCREATE VIEW work_consumed_v AS\nSELECT work_id,\n       SUM(total) as consumed\nFROM task_t\nGROUP BY work_id;\n\nCREATE VIEW top10_users AS\nSELECT user_id,\n       SUM(total) as consumed\nFROM task_t\n    GROUP BY user_id\nORDER BY consumed DESC LIMIT 10;\n\n-- consumed total by workspace.\nCREATE VIEW workspace_consumed_v AS\nSELECT DISTINCT\n       customer_t.id as customer_id,\n       workspace_t.id as workspace_id,\n       SUM(work_consumed_v.consumed) OVER (PARTITION BY workspace_t.id ORDER BY customer_t.id) as consumed\nFROM  work_consumed_v\n      JOIN work_t ON work_t.id = work_consumed_v.work_id\n      JOIN workspace_t ON work_t.workspace_id = workspace_t.id\n      JOIN customer_t ON  workspace_t.customer_id = customer_t.id;\n\n-- consumed total by customer.\nCREATE VIEW customer_consumed_v AS\nSELECT customer_id,\n       SUM(consumed) as consumed\nFROM  workspace_consumed_v\nGROUP BY customer_id;\n\nCREATE VIEW customer_total_credit_v AS\nSELECT customer_t.id as customer_id,\n       SUM(credit_t.total) as total\nFROM customer_t\n     LEFT JOIN credit_t ON credit_t.customer_id = customer_t.id\nGROUP BY customer_t.id;\n\nCREATE VIEW customer_balance_v as\nSELECT\n       coalesce(customer_consumed_v.customer_id, customer_total_credit_v.customer_id) as customer_id,\n       customer_total_credit_v.total as total_credit,\n       customer_consumed_v.consumed as total_consumed,\n       (coalesce(customer_total_credit_v.total,0) - coalesce(customer_consumed_v.consumed, 0)) as balance\nFROM customer_consumed_v\n     FULL JOIN customer_total_credit_v\n     ON customer_consumed_v.customer_id = customer_total_credit_v.customer_id;",
            "description": "Accrual program"
          }
        },
        {
          "type": "connector",
          "name": "customer_in",
          "body": {
            "description": "Accrual customers input connector",
            "config": {
              "transport": {
                "name": "kafka_input",
                "config": {
                  "bootstrap.servers": "redpanda:9092",
                  "auto.offset.reset": "earliest",
                  "group.id": "customers",
                  "topics": [
                    "customers"
                  ],
                  "security.protocol": "PLAINTEXT"
                }
              },
              "format": {
                "name": "json",
                "config": {
                  "update_format": "insert_delete",
                  "array": false
                }
              }
            }
          }
        }
      ]
    }
  ]
}