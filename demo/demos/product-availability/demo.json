{
  "title": "Product Availability",
  "description": "A demonstration of product availability across warehouses as it is constantly updated.",
  "prefix": "product-availability-",
  "steps": [
    {
      "name": "setup",
      "entities": [
        {
          "type": "program",
          "name": "program",
          "body": {
            "description": "Program of the Product Availability demo.",
            "code": "-- Warehouse\nCREATE TABLE warehouse (\n    id INT PRIMARY KEY,\n    name VARCHAR NOT NULL,\n    address VARCHAR NOT NULL\n);\n\n-- Product\nCREATE TABLE product (\n    id INT PRIMARY KEY,\n    name VARCHAR NOT NULL,\n    mass DOUBLE NOT NULL,\n    volume DOUBLE NOT NULL\n);\n\n-- Each warehouse stores products\nCREATE TABLE storage (\n    warehouse_id INT FOREIGN KEY REFERENCES warehouse(id),\n    product_id INT FOREIGN KEY REFERENCES product(id),\n    num_available INT NOT NULL,\n    updated_at TIMESTAMP NOT NULL,\n    PRIMARY KEY (warehouse_id, product_id)\n);\n\n-- How much of each product is stored\nCREATE VIEW product_stored AS\n(\n    SELECT   product.id,\n             product.name,\n             SUM(storage.num_available) AS num_available,\n             SUM(storage.num_available * product.mass) AS total_mass,\n             SUM(storage.num_available * product.volume) AS total_volume\n    FROM     product\n             LEFT JOIN storage ON product.id = storage.product_id\n             LEFT JOIN warehouse ON storage.warehouse_id = warehouse.id\n    GROUP BY (product.id, product.name)\n);\n\n-- How much each warehouse has stored\nCREATE VIEW warehouse_stored AS\n(\n    SELECT   warehouse.id,\n             warehouse.name,\n             SUM(storage.num_available) AS num_available,\n             SUM(storage.num_available * product.mass) AS total_mass,\n             SUM(storage.num_available * product.volume) AS total_volume\n    FROM     warehouse\n             LEFT JOIN storage ON warehouse.id = storage.warehouse_id\n             LEFT JOIN product ON storage.product_id = product.id\n    GROUP BY (warehouse.id, warehouse.name)\n);\n\n-- Top 3 warehouse according to stored mass\nCREATE VIEW top_3_warehouse_mass AS\n(\n    SELECT   warehouse_stored.id,\n             warehouse_stored.name,\n             warehouse_stored.total_mass\n    FROM     warehouse_stored\n    ORDER BY warehouse_stored.total_mass DESC\n    LIMIT    3\n);\n\n-- Top 3 warehouse according to stored volume\nCREATE VIEW top_3_warehouse_volume AS\n(\n    SELECT   warehouse_stored.id,\n             warehouse_stored.name,\n             warehouse_stored.total_volume\n    FROM     warehouse_stored\n    ORDER BY warehouse_stored.total_volume DESC\n    LIMIT    3\n);\n\n-- Availability stats across all products\nCREATE VIEW product_availability AS\n(\n    SELECT COUNT(*) AS num_product,\n           MIN(product_stored.num_available) AS min_availability,\n           AVG(product_stored.num_available) AS avg_availability,\n           MAX(product_stored.num_available) AS max_availability,\n           SUM(product_stored.num_available) AS sum_availability\n    FROM   product_stored\n);\n\n-- Total number of warehouses\nCREATE VIEW num_warehouse AS\nSELECT COUNT(*) AS num_warehouse\nFROM   warehouse;\n\n-- Total number of products\nCREATE VIEW num_product AS\nSELECT COUNT(*) AS num_product\nFROM   product;\n\n-- Total number of storage entries\nCREATE VIEW num_storage AS\nSELECT COUNT(*) AS num_storage\nFROM   storage;\n"
          }
        },
        {
          "type": "connector",
          "name": "warehouse-in",
          "body": {
            "description": "Kafka input connector for the warehouse table of the Product Availability demo.",
            "config": {
              "transport": {
                "name": "kafka_input",
                "config": {
                  "bootstrap.servers": "${secret:product-availability-bootstrap-servers}",
                  "security.protocol": "SASL_PLAINTEXT",
                  "sasl.mechanism": "SCRAM-SHA-256",
                  "sasl.username": "${secret:product-availability-consume-sasl-username}",
                  "sasl.password": "${secret:product-availability-consume-sasl-password}",
                  "topics": [
                    "demo-product-availability-warehouse"
                  ],
                  "auto.offset.reset": "earliest"
                }
              },
              "format": {
                "name": "json",
                "config": {
                  "update_format": "insert_delete",
                  "array": false
                }
              }
            }
          }
        },
        {
          "type": "connector",
          "name": "product-in",
          "body": {
            "description": "Kafka input connector for the product table of the Product Availability demo.",
            "config": {
              "transport": {
                "name": "kafka_input",
                "config": {
                  "bootstrap.servers": "${secret:product-availability-bootstrap-servers}",
                  "security.protocol": "SASL_PLAINTEXT",
                  "sasl.mechanism": "SCRAM-SHA-256",
                  "sasl.username": "${secret:product-availability-consume-sasl-username}",
                  "sasl.password": "${secret:product-availability-consume-sasl-password}",
                  "topics": [
                    "demo-product-availability-product"
                  ],
                  "auto.offset.reset": "earliest"
                }
              },
              "format": {
                "name": "json",
                "config": {
                  "update_format": "insert_delete",
                  "array": false
                }
              }
            }
          }
        },
        {
          "type": "connector",
          "name": "storage-in",
          "body": {
            "description": "Kafka input connector for the storage table of the Product Availability demo.",
            "config": {
              "transport": {
                "name": "kafka_input",
                "config": {
                  "bootstrap.servers": "${secret:product-availability-bootstrap-servers}",
                  "security.protocol": "SASL_PLAINTEXT",
                  "sasl.mechanism": "SCRAM-SHA-256",
                  "sasl.username": "${secret:product-availability-consume-sasl-username}",
                  "sasl.password": "${secret:product-availability-consume-sasl-password}",
                  "topics": [
                    "demo-product-availability-storage"
                  ],
                  "auto.offset.reset": "earliest"
                }
              },
              "format": {
                "name": "json",
                "config": {
                  "update_format": "insert_delete",
                  "array": false
                }
              }
            }
          }
        },
        {
          "type": "pipeline",
          "name": "pipeline",
          "body": {
            "description": "Pipeline to run the Product Availability demo.",
            "config": {"workers": 6},
            "program_name": "program",
            "connectors": [
              {
                "connector_name": "warehouse-in",
                "is_input": true,
                "name": "warehouse-in",
                "relation_name": "WAREHOUSE"
              },
              {
                "connector_name": "product-in",
                "is_input": true,
                "name": "product-in",
                "relation_name": "PRODUCT"
              },
              {
                "connector_name": "storage-in",
                "is_input": true,
                "name": "storage-in",
                "relation_name": "STORAGE"
              }
            ]
          }
        }
      ]
    }
  ]
}
