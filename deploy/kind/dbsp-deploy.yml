apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: dbsp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
          env:
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: db-creds
                key: postgres-password
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: dbsp
  labels:
    app: postgres
spec:
  ports:
    - port: 5432
  selector:
    app: postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dbsp-deployment
  namespace: dbsp
  labels:
    app: dbsp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dbsp
  template:
    metadata:
      labels:
        app: dbsp
    spec:
      containers:
      - image: ghcr.io/feldera/dbsp-manager
        name: dbsp-manager
        ports:
        - containerPort: 8080
        command:
          - ./pipeline-manager
        args:
          - --bind-address=0.0.0.0
          - --api-server-working-directory=/working-dir
          - --compiler-working-directory=/working-dir
          - --runner-working-directory=/working-dir
          - --sql-compiler-home=/database-stream-processor/sql-to-dbsp-compiler
          - --dbsp-override-path=/database-stream-processor
          - --db-connection-string=postgresql://$(PGUSER):$(PGPASSWORD)@postgres.dbsp.svc.cluster.local:5432
        env:
        - name: PGUSER
          valueFrom:
            secretKeyRef:
              name: db-creds
              key: postgres-password
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: db-creds
              key: postgres-password
---
kind: Service
apiVersion: v1
metadata:
  name: dbsp-service
  namespace: dbsp
spec:
  selector:
    app: dbsp
  ports:
  - port: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cluster-ingress
  namespace: dbsp
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: dbsp-service
            port:
              number: 8080
