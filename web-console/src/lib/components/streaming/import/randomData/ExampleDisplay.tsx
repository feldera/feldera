import { inRangeInclusive } from '$lib/functions/common/bigNumber'
import { getValueFormatter, numericRange, SQLValueJS } from '$lib/functions/ddl'
import { Field } from '$lib/services/manager'
import { BigNumber } from 'bignumber.js/bignumber.js'
import invariant from 'tiny-invariant'

import { Grid, Typography } from '@mui/material'

import type { SqlType } from '$lib/services/manager'

/**
 * Displays an example value of a value that was generated by a random
 * generation method.
 *
 * Also indicates if the example was modified after generation due to type
 * constraints (overflow etc.).
 */
export const ExampleDisplay = ({
  example,
  field,
  parsed
}: {
  field: Field
  parsed: SQLValueJS
  example: SQLValueJS
}) => {
  invariant(field.columntype.type)
  let beforeParsedValue = ''
  const displayParsed = getValueFormatter(field.columntype)(parsed)
  let afterParsedValue = ''

  // Indicates if the value got adjusted by the valueparser due to constraints
  // on the field type
  const adjustments: string[] = []
  if (
    typeof example === 'number' &&
    (['TINYINT', 'SMALLINT', 'INTEGER', 'BIGINT', 'DECIMAL', 'REAL', 'DOUBLE'] as SqlType[]).includes(
      field.columntype.type
    )
  ) {
    const range = numericRange(field.columntype)
    if (!inRangeInclusive(range)(example)) {
      adjustments.push('clamp')
    }
  }
  if (typeof example === 'string') {
    beforeParsedValue = "'"
    afterParsedValue = "'"
    if (
      (['VARCHAR', 'CHAR'] as SqlType[]).includes(field.columntype.type) &&
      field.columntype.precision != null &&
      field.columntype.precision != -1 &&
      example.length > field.columntype.precision
    ) {
      adjustments.push('trimmed')
    } else if (
      (['CHAR'] as SqlType[]).includes(field.columntype.type) &&
      field.columntype.precision != null &&
      example.length < field.columntype.precision
    ) {
      // HTML has this behaviour that if a string has multiple white-space at
      // the end they get reduced to one. Which is a bit odd for displaying the
      // char. As e.g., 'abc' with char(10) is displayed as 'abc<1space>'
      // instead of 'abc<10space>'
      //
      // TODO: fix with ideas from here:
      // https://stackoverflow.com/questions/433493/why-does-html-require-that-multiple-spaces-show-up-as-a-single-space-in-the-brow
      adjustments.push('padded')
    }
  }

  if (
    BigNumber.isBigNumber(example) &&
    typeof parsed === 'string' &&
    (['DECIMAL'] as SqlType[]).includes(field.columntype.type) &&
    parsed.length != example.toFixed().length
  ) {
    adjustments.push('trimmed')
  }

  return (
    <Grid item sm={2} xs={12}>
      <>
        <Typography sx={{ typography: 'subtitle2' }}>
          Example{adjustments.length > 0 ? ': ' + adjustments.join(',') : ':'}
        </Typography>
        <Typography sx={{ typography: 'body2', fontStyle: 'italic' }}>
          {beforeParsedValue}
          {displayParsed}
          {afterParsedValue}
        </Typography>
      </>
    </Grid>
  )
}
